案例一：记住密码提示框：
1、效果原理(display)
2、JS中的事件
   当……的时候
  onmouseover、onmouseout
  alert的使用
3、元素获取（id、doucument.getElementById）
4、属性操作：
  obj.style.display = ‘’
  赋值
  点
  引号
  class的使用obj.className = ‘x’（案例二：换class）





案例三：网页换肤：
1、效果原理：
  准备几套CSS样式表
  在点击按钮时，改变href值
2、onclick的使用：
  当点击时
  事件可以随意改变 





案例四：改变div外观（函数function）
1、改变div的宽、高、背景色（权重）
2、所有代码写在行间很乱
3、script标签
4、函数的定义
5、函数的调用
6、变量的使用





案例五：改变div外观（行间事件）
结构、表现、行为三者分离的写法
  window.onload的使用
  提取行间事件
  不用onload的结果
  JS执行顺序





案例六：收缩展开菜单（if判断）
1、效果思路
2、if条件判断
  根据情况，做不同的事
  判断是否相等（==）
3、更复杂的判断
  if、else if、else
  判断条件的选择





案例七：全选（for循环）
1、效果原理
  控制checkbox的状态—checked；
2、获取一组元素—getElementsByTagName
3、for循环
  重复执行操作
  for循环的执行顺序(案例7-1：for原理; 案例7-2：自增)







案例八：弹出当前input属性值（for循环和事件）
1、onclick弹出（alert）提示；
2、this的使用；
3、obj.value







案例九：切换选项卡（for循环）
1、效果原理
  点击按钮时，改变class和style.display
2、选项卡头部标签
  所有按钮的className都为空
  让当前按钮的className为active（this的使用）
3、选项卡内容
  所有div的display都为none；
  让当前div的display为block（当前按钮的编号）




 
案例十：简易日历
1、效果原理
  选项卡.active
2、innerHTML（案例10-01）
  设置当前元素的index；
  index对应元素的innerHTML；
  连续取值（document.getElementById('id').getElementsByTagName('tag')[i]）；
  index+1；
  字符串连接（案例10-02）； 
3、数组（Array）
  数组原理（案例10-3）；
  Array的this.index







案例十一  ：数码时钟（Date对象）
1、效果原理：
  更改img的src的值；
2、获取时间（案例11-01：Date对象）
  Date对象
  getHours()，getMinutes()，getSeconds()
3、显示系统时间
  字符串连接
  空位补0（定义带有参数的函数）
4、设置图片路径
  charAt方法（设置图片文件名是获取到的时间的字符位置）
5、设置自动刷新
  设置获取时间函数update
  自动刷新（setInterval(update,间隔时间)）
  -------------------------------------------
      案例11-02：定时器
      定时器类型
        无限循环setInterval(要执行的代码,间隔时间)；
        运行一次setTimeout(要执行的代码,间隔时间)；
      关闭定时器
        clearInterval
        clerTimeout
  --------------------------------------------
  立即调用时间函数update()






案例十二：延时提示框
1、效果演示
2、效果原理：移入显示、移出隐藏
3、Bug：移入下面的div，依然会隐藏
4、简化代码：合并onmouseover和onmouseout






案例十三：运动基本原理（案例13-01）
1、obj.style.left = obj.offsetLeft + value + 'px'；
2、定时器自动运动；






案例十四：侧边栏分享菜单
1、obj.style.left = obj.offsetLeft + value + 'px'；
2、设置定时器setInterval()让元素运动起来；
3、判断元素的offsetLeft的值，到达指定位置的时候停止运动（清除定时器）；
4、bug：offsetLeft值改小后，循环累加offsetLeft的值（定时器开始之前先清除定时器）；
5、复制onmouseover鼠标事件，将判断条件改为指定位置（并将对应的offsetLeft的值改方向）；
6、传参（两个参）（14-01）：
  function (speed, iTarget){ fun }(***注意：事件不可以调用带有参数的函数***)
7、传参（一个参）（14-02）：
  function (iTarget){ 
    用if...else...判断speed的方向；
    fun 
  }





案例十五：无缝滚动
1、 效果原理
  让ul一直向左移动（obj.style.left = obj.offsetLeft + value + 'px'）
2、ul的宽
  复制li(innerHTML和+=)
  修改ul的width（li[i].offsetWidth*li.length + 'px'）
3、滚动过界后，重设位置
  判断过界（ul的left值是总宽度的-1/2）后，将ul的left改为0；
4、改变滚动方向
  修改iSpeed值
  取值的方法（获取便签元素后使用索引值指定对应元素）
  修改判断条件（ul的offsetLeft值大于0）后，将ul的left改为ul的总宽度的-1/2(***注意单位***)
5、鼠标移入暂停
  移入关闭定时器
  移出重新开启定时器





案例十六：评分
1、
